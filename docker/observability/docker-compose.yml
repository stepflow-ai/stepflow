version: '3.8'

# Observability Stack for Stepflow
# Components: OpenTelemetry Collector, Jaeger, Prometheus, Loki, Grafana
#
# AGPL-Licensed Components (for transparency):
# - Grafana (AGPL 3.0): https://github.com/grafana/grafana
# - Loki (AGPL 3.0): https://github.com/grafana/loki
# These are provided as official Docker images for local development and testing.

services:
  # OpenTelemetry Collector - Central telemetry ingestion and processing
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.95.0
    container_name: stepflow-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "14317:4317"  # OTLP gRPC receiver (remapped to avoid common port conflicts)
      - "14318:4318"  # OTLP HTTP receiver (remapped for consistency)
      - "8888:8888"   # Prometheus metrics (collector's own metrics)
      - "8889:8889"   # Prometheus exporter (application metrics)
    networks:
      - observability
    depends_on:
      - jaeger
      - prometheus
      - loki

  # Jaeger - Distributed tracing backend and UI
  jaeger:
    image: jaegertracing/all-in-one:1.54
    container_name: stepflow-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # Jaeger gRPC (used by OTel Collector)
      - "4317"        # OTLP gRPC (internal)
      - "4318"        # OTLP HTTP (internal)
    networks:
      - observability

  # Prometheus - Metrics storage and querying
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: stepflow-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"   # Prometheus UI and API
    networks:
      - observability

  # Loki - Log aggregation system
  loki:
    image: grafana/loki:2.9.4
    container_name: stepflow-loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    ports:
      - "3100:3100"   # Loki HTTP API
    networks:
      - observability

  # Grafana - Unified observability UI
  grafana:
    image: grafana/grafana:10.3.3
    container_name: stepflow-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_INSTALL_PLUGINS=
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    ports:
      - "3001:3000"   # Grafana UI
    networks:
      - observability
    depends_on:
      - prometheus
      - loki
      - jaeger

volumes:
  prometheus-data:
    driver: local
  loki-data:
    driver: local
  grafana-data:
    driver: local

networks:
  observability:
    driver: bridge
    name: stepflow-observability
