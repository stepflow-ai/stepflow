# OpenTelemetry Collector configuration for Stepflow observability
#
# This collector receives telemetry data from Stepflow via OTLP and routes it to:
# - Jaeger (traces)
# - Prometheus (metrics)
# - Loki (logs)

receivers:
  # OTLP receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "*"

  # Prometheus receiver to scrape collector's own metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 10s
          static_configs:
            - targets: ['localhost:8888']

processors:
  # Batch processor to reduce number of outgoing connections
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Resource processor to add deployment environment info
  resource:
    attributes:
      - key: deployment.environment
        value: local
        action: insert
      - key: service.namespace
        value: stepflow
        action: insert

  # Attributes processor for filtering/transforming
  attributes:
    actions:
      - key: http.url
        action: delete  # Remove potentially sensitive URLs from spans

exporters:
  # Export traces to Jaeger
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  # Export metrics to Prometheus
  # We use prometheusremotewrite for push-based export
  # Alternatively, can use prometheus exporter for scrape-based
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: stepflow
    send_timestamps: true
    metric_expiration: 5m

  # Export logs to Loki
  loki:
    endpoint: http://loki:3100/loki/api/v1/push

  # Logging exporter for debugging (outputs to collector's stdout)
  logging:
    verbosity: normal
    sampling_initial: 5
    sampling_thereafter: 200

service:
  # Configure telemetry for the collector itself
  telemetry:
    logs:
      level: info
    metrics:
      level: detailed
      address: 0.0.0.0:8888

  pipelines:
    # Traces pipeline: OTLP -> batch -> Jaeger
    traces:
      receivers: [otlp]
      processors: [memory_limiter, resource, batch]
      exporters: [otlp/jaeger, logging]

    # Metrics pipeline: OTLP + Prometheus -> batch -> Prometheus exporter
    metrics:
      receivers: [otlp, prometheus]
      processors: [memory_limiter, resource, batch]
      exporters: [prometheus, logging]

    # Logs pipeline: OTLP -> batch -> Loki
    logs:
      receivers: [otlp]
      processors: [memory_limiter, resource, attributes, batch]
      exporters: [loki, logging]

  extensions: []
