[workspace.package]
authors = ["Ben Chambers"]
edition = "2024"
version = "0.6.0"
license = "Apache-2.0"
homepage = "https://fuzzy-journey-4j3y1we.pages.github.io/"
repository = "https://github.com/stepflow-ai/stepflow"

[workspace]
resolver = "2"
members = ["crates/*"]

[workspace.dependencies]
arc-swap = "1.7"
async-stream = "0.3"
async-trait = "0.1"
axum = "0.8"
bit-set = "0.8.0"
chrono = { version = "0.4", features = ["serde"] }
clap = { version = "4.5.35", features = ["derive", "env"] }
dashmap = "6.1"
dynosaur = "0.2.0"
erased-serde = "0.4.6"
error-stack = { version = "0.5.0", features = ["serde"] }
fastrace = { version = "0.7", features = ["enable"] }
fastrace-opentelemetry = "0.14"
futures = "0.3.31"
glob = "0.3"
log = "0.4"
logforth = { version = "0.28", features = ["layout-json", "layout-text", "bridge-log", "diagnostic-fastrace", "append-file", "append-opentelemetry"] }
logforth-append-opentelemetry = { version = "0.2.1" }
matchit = "0.8.4"
hex = "0.4"
indexmap = { version = "2.8.0", features = ["serde"] }
insta = { version = "1.34.0", features = ["glob", "yaml", "filters" ] }
insta-cmd = "0.6.0"
itertools = "0.14"
nix = { version = "0.29", features = ["process", "signal"] }
openai-api-rs = { version = "6.0.6", features = ["rustls"], default-features = false }
opentelemetry = { version = "0.31", features = ["trace", "logs"] }
opentelemetry-otlp = { version = "0.31", features = ["trace", "logs", "grpc-tonic", "zstd-tonic", ] }
opentelemetry_sdk = { version = "0.31", features = ["rt-tokio", "trace", "logs"] }
opentelemetry-semantic-conventions = "0.31"
pingora = { version = "0.6", features = ["proxy"] }
pingora-core = "0.6"
pingora-http = "0.6"
pingora-load-balancing = "0.6"
pingora-proxy = "0.6"
regex = "1.11.1"
reqwest = { version = "0.12", features = ["json", "rustls-tls"], default-features = false }
reqwest-eventsource = "0.6"
rustyline = "14.0"
safer_owning_ref = "0.5.0"
schemars = { version = "1.0", features = ["indexmap2", "url2", "chrono04"] }
serde = { version = "1.0.219", features = ["derive", "rc"] }
serde_json = { version = "1.0.140", features = ["preserve_order", "raw_value"] }
serde_with = { version = "3.14", features = ["schemars_1"]}
serde_yaml_ng = "0.10.0"
sha2 = "0.10"
similar = "2.7.0"
similar-asserts = { version = "1.7.0", features = ["serde" ] }
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "uuid", "sqlite"] }
static_assertions = "1.1.0"
stepflow-analysis = { path = "./crates/stepflow-analysis" }
subst = { version = "0.3" }
stepflow-builtins = { path = "./crates/stepflow-builtins" }
stepflow-components-mcp = { path = "./crates/stepflow-components-mcp" }
stepflow-config = { path = "./crates/stepflow-config" }
stepflow-core = { path = "./crates/stepflow-core" }
stepflow-execution = { path = "./crates/stepflow-execution" }
stepflow-mock = { path = "./crates/stepflow-mock" }
stepflow-observability = { path = "./crates/stepflow-observability" }
stepflow-plugin = { path = "./crates/stepflow-plugin" }
stepflow-protocol = { path = "./crates/stepflow-protocol" }
stepflow-server = { path = "./crates/stepflow-server" }
stepflow-state = { path = "./crates/stepflow-state" }
stepflow-state-sql = { path = "./crates/stepflow-state-sql" }
tempfile = "3.8"
test-with = { version = "0.14.10", features = ["runtime"] }
thiserror = "2.0.12"
tokio = { version = "1.44.1", features = ["rt-multi-thread", "macros", "process", "sync", "io-util", "time"]}
tokio-stream = { version = "0.1.17", features = ["io-util"] }
tower = "0.5"
tower-http = { version = "0.6", features = ["cors", "trace"] }
trait-variant = "0.1.2"
url = { version = "2.5.4", features = ["serde"]}
utoipa = { version = "5.3", features = ["axum_extras", "chrono", "indexmap", "rc_schema", "url", "uuid"] }
utoipa-axum = "0.2"
utoipa-swagger-ui = { version = "9.0", features = ["axum"] }
uuid = { version = "1.16.0", features = ["v4", "serde"]}
walkdir = "2.5.0"
which = { version = "7.0.3", features = ["tracing"] }
strum = { version = "0.26", features = ["derive"] }

# Enable max optimizations for dependencies, but not for our code
[profile.dev.package."*"]
opt-level = 3

[workspace.lints.rust]
rust_2018_idioms = "deny"
nonstandard_style = "deny"
future_incompatible = "deny"

[workspace.lints.clippy]
print_stderr = "deny"
print_stdout = "deny"
undocumented_unsafe_blocks = "deny"
unused_trait_names = "deny"

[workspace.metadata.cargo-machete]
ignored = []

[workspace.metadata.cargo-machete.renamed]
safer_owning_ref = "owning_ref"