# Lima configuration for k3s with VZ backend
# Requires: macOS 15+ with M3+ chip
# Run with: limactl start lima-k3s-vz.yaml

# VM type
vmType: "vz"

# OS image
images:
- location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-amd64.img"
  arch: "x86_64"
- location: "https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-arm64.img"
  arch: "aarch64"

# CPU and memory
cpus: 4
memory: "8GiB"
disk: "50GiB"

# Mount the stepflow project directory
mounts:
- location: "~/code/stepflow"
  mountPoint: "/home/lima.linux/stepflow"
  writable: true

# Network configuration
networks:
- vzNAT: true

# Provision script to install k3s and dependencies
provision:
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail

    # Update package list
    apt-get update

    # Install essential packages
    apt-get install -y \
      curl \
      wget \
      git \
      jq \
      socat \
      conntrack \
      ipset \
      iptables \
      ca-certificates \
      gnupg \
      lsb-release

    # Install Docker
    # Add Docker's official GPG key
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc

    # Add Docker repository
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null

    # Install Docker packages
    apt-get update
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    # Add lima user to docker group
    usermod -aG docker lima

    # Install k3s with specific configuration
    # --disable=traefik: We'll use our own ingress (Pingora)
    # --write-kubeconfig-mode=644: Make kubeconfig readable
    # --tls-san: Allow access from Mac host
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--disable=traefik --write-kubeconfig-mode=644 --tls-san=127.0.0.1" sh -

    # Wait for k3s to be ready
    echo "Waiting for k3s to be ready..."
    timeout 60 sh -c 'until kubectl get nodes | grep -q " Ready"; do sleep 2; done' || {
        echo "k3s failed to start properly"
        systemctl status k3s
        exit 1
    }

    # Enable k3s local registry (for local development)
    # This allows us to push images without external registry
    mkdir -p /etc/rancher/k3s
    cat > /etc/rancher/k3s/registries.yaml <<'REGISTRY_EOF'
    mirrors:
      "localhost:5000":
        endpoint:
          - "http://localhost:5000"
    REGISTRY_EOF

    # Install local Docker registry
    docker pull registry:2
    docker run -d -p 5000:5000 --restart=always --name registry registry:2 || true

    # Restart k3s to pick up registry config
    systemctl restart k3s

    echo "âœ… k3s cluster ready!"
    echo "   Nodes: $(kubectl get nodes -o wide)"
    echo "   k3s version: $(k3s --version | head -1)"

- mode: user
  script: |
    #!/bin/bash
    set -eux -o pipefail

    # Copy kubeconfig to user directory for easy access
    mkdir -p ~/.kube
    sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
    sudo chown $(id -u):$(id -g) ~/.kube/config
    chmod 600 ~/.kube/config

    # Add kubectl alias for convenience
    echo 'export KUBECONFIG=~/.kube/config' >> ~/.bashrc
    echo 'alias k=kubectl' >> ~/.bashrc

    echo "k3s development environment ready!"
    echo "Cluster info: $(kubectl cluster-info)"
    echo ""
    echo "Stepflow project mounted at: /home/lima.linux/stepflow"

# SSH configuration
ssh:
  localPort: 2222
  loadDotSSHPubKeys: true

# Port forwarding for k3s API and services
# GRPC forwarding (recommended) - automatic port mapping
portForwards:
- guestPort: 6443
  hostPort: 6443
  proto: tcp
- guestPort: 80
  hostPort: 8080
  proto: tcp
- guestPort: 443
  hostPort: 8443
  proto: tcp
- guestPort: 5000
  hostPort: 5000
  proto: tcp
